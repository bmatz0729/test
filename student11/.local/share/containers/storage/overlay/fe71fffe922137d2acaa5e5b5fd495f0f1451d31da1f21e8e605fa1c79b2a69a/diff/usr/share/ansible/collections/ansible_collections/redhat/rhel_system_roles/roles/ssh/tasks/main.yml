---
- name: Set platform/version specific variables
  include_vars: "{{ __ssh_vars_file }}"
  loop:
    - "{{ ansible_facts['os_family'] }}.yml"
    - "{{ ansible_facts['distribution'] }}.yml"
    - "{{ ansible_facts['distribution'] ~ '_' ~ ansible_facts['distribution_major_version'] }}.yml"
    - "{{ ansible_facts['distribution'] ~ '_' ~ ansible_facts['distribution_version'] }}.yml"
  vars:
    __ssh_vars_file: "{{ role_path }}/vars/{{ item }}"
  when: __ssh_vars_file is file

- name: Ensure required packages are installed
  package:
    name: "{{ __ssh_packages + ssh_additional_packages }}"
    state: present

- name: Gather information about the user for user configuration
  getent:
    database: passwd
    key: "{{ ssh_user }}"
  when:
    - ssh_user is not none

- name: Make sure the ~/.ssh/ directory exists and has expected permissions
  file:
    path: "{{ getent_passwd[ssh_user][4] }}/.ssh/"
    state: directory
    mode: 0700
    owner: "{{ ssh_user }}"
    group: "{{ ssh_user }}"
  when:
    - ssh_user is not none
    - getent_passwd is defined

- name: Generate the configuration file
  template:
    src: "ssh_config.j2"
    dest: "{{ __ssh_config_file | trim }}"
    owner: "{{ __ssh_config_owner | trim }}"
    group: "{{ __ssh_config_group | trim }}"
    mode: "{{ __ssh_config_mode | trim }}"
    validate: "{% if __ssh_supports_validate %}\n  ssh -G -F %s example.com\n{% else %}\n  true %s\n{% endif %}"
    backup: yes
  vars:
    __ssh_skip_defaults: "{% if ssh_skip_defaults != 'auto' %}\n  {{ ssh_skip_defaults }}\n{% elif ssh_user is not none %}\n  true\n{% else %}\n  {% if ssh_drop_in_name is not none and __ssh_supports_drop_in %}\n    true\n  {% else %}\n    false\n  {% endif %}\n{% endif %}"
    __ssh_config_file: "{% if ssh_config_file is not none %}\n  {{ ssh_config_file }}\n{% elif ssh_user is not none and getent_passwd is defined %}\n  {{ getent_passwd[ssh_user][4] }}/.ssh/config\n{% else %}\n  {% if ssh_drop_in_name is not none and __ssh_supports_drop_in %}\n    {{ __ssh_drop_in_template | replace(\"{name}\", ssh_drop_in_name) }}\n  {% else %}\n    /etc/ssh/ssh_config\n  {% endif %}\n{% endif %}"
    __ssh_config_owner: "{% if ssh_config_owner is not none %}\n  {{ ssh_config_owner }}\n{% elif ssh_user is not none %}\n  {{ ssh_user }}\n{% else %}\n  root\n{% endif %}"
    __ssh_config_group: "{% if ssh_config_group is not none %}\n  {{ ssh_config_group }}\n{% elif ssh_user is not none and getent_passwd is defined %}\n  {{ ssh_user }}\n{% else %}\n  root\n{% endif %}"
    __ssh_config_mode: "{% if ssh_config_mode is not none %}\n  {{ ssh_config_mode }}\n{% elif ssh_user is not none %}\n  600\n{% else %}\n  644\n{% endif %}"
